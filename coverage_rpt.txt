Coverage Report by instance with details

=================================================================================
=== Instance: /FIFO_top/fifoif
=== Design Unit: work.FIFO_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/fifoif --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /FIFO_top/dut/fifo_sva_inst
=== Design Unit: work.FIFO_SVA
=================================================================================

Assertion Coverage:
    Assertions                      12        12         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/dut/fifo_sva_inst/assert__no_full_on_rd_en
                     FIFO_SVA.sv(78)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__no_rd_en
                     FIFO_SVA.sv(71)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__no_wr_en
                     FIFO_SVA.sv(64)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__wr_ack_not_on_full
                     FIFO_SVA.sv(57)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_underflow
                     FIFO_SVA.sv(49)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_overflow
                     FIFO_SVA.sv(43)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_wr_ack
                     FIFO_SVA.sv(37)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_reset
                     FIFO_SVA.sv(8)                     0          1
/FIFO_top/dut/fifo_sva_inst/a_full
                     FIFO_SVA.sv(13)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_empty
                     FIFO_SVA.sv(18)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_almostfull
                     FIFO_SVA.sv(23)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_almostempty
                     FIFO_SVA.sv(28)                    0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/dut/fifo_sva_inst

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
------------------------------------IF Branch------------------------------------
    7                                       8370     Count coming in to IF
    7               1                        192             if(!rst_n) begin
                                            8178     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    12                                      8370     Count coming in to IF
    12              1                       3533             if(FIFO_top.dut.count == FIFO_DEPTH) begin
                                            4837     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    17                                      8370     Count coming in to IF
    17              1                        217             if(FIFO_top.dut.count == 0) begin
                                            8153     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    22                                      8370     Count coming in to IF
    22              1                       2793             if(FIFO_top.dut.count == FIFO_DEPTH-1) begin
                                            5577     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    27                                      8370     Count coming in to IF
    27              1                        213             if(FIFO_top.dut.count == 1) begin
                                            8157     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         4         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/dut/fifo_sva_inst --

  File FIFO_SVA.sv
----------------Focused Condition View-------------------
Line       12 Item    1  (FIFO_top.dut.count == 8)
Condition totals: 1 of 1 input term covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (FIFO_top.dut.count == 8)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (FIFO_top.dut.count == 8)_0  -                             
  Row   2:          1  (FIFO_top.dut.count == 8)_1  -                             

----------------Focused Condition View-------------------
Line       17 Item    1  (FIFO_top.dut.count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (FIFO_top.dut.count == 0)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (FIFO_top.dut.count == 0)_0  -                             
  Row   2:          1  (FIFO_top.dut.count == 0)_1  -                             

----------------Focused Condition View-------------------
Line       22 Item    1  (FIFO_top.dut.count == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                       Input Term   Covered  Reason for no coverage   Hint
                      -----------  --------  -----------------------  --------------
  (FIFO_top.dut.count == (8 - 1))         Y

     Rows:       Hits  FEC Target                         Non-masking condition(s)      
 ---------  ---------  --------------------               -------------------------     
  Row   1:          1  (FIFO_top.dut.count == (8 - 1))_0  -                             
  Row   2:          1  (FIFO_top.dut.count == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       27 Item    1  (FIFO_top.dut.count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (FIFO_top.dut.count == 1)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (FIFO_top.dut.count == 1)_0  -                             
  Row   2:          1  (FIFO_top.dut.count == 1)_1  -                             



Directive Coverage:
    Directives                      12        12         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/dut/fifo_sva_inst/cover__no_full_on_rd_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(79) 2851 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__no_rd_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(72) 6956 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__no_wr_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(65) 2970 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__wr_ack_not_on_full 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(58) 4786 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_underflow 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(50)   40 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_overflow 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(44) 3338 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_wr_ack 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(38) 3499 Covered   
/FIFO_top/dut/fifo_sva_inst/c_reset      FIFO_SVA Verilog  SVA  FIFO_SVA.sv(10)   96 Covered   
/FIFO_top/dut/fifo_sva_inst/c_full       FIFO_SVA Verilog  SVA  FIFO_SVA.sv(15) 3533 Covered   
/FIFO_top/dut/fifo_sva_inst/c_empty      FIFO_SVA Verilog  SVA  FIFO_SVA.sv(20)  217 Covered   
/FIFO_top/dut/fifo_sva_inst/c_almostfull FIFO_SVA Verilog  SVA  FIFO_SVA.sv(25) 2793 Covered   
/FIFO_top/dut/fifo_sva_inst/c_almostempty 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(30)  213 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/dut/fifo_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
    2                                                module FIFO_SVA(clk, rst_n, wr_en, rd_en, wr_ack, overflow, full, empty, almostfull, almostempty, underflow, data_in, data_out);
    3                                                    input logic clk, rst_n, wr_en, rd_en, wr_ack, overflow, full, empty, almostfull, almostempty, underflow;
    4                                                    input logic [FIFO_WIDTH-1:0] data_in, data_out;
    5                                                
    6               1                       8370         always_comb begin 

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/dut/fifo_sva_inst --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /FIFO_top/dut
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        24        24         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/dut

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    21                                      9867     Count coming in to IF
    21              1                        193     	if (!rst_n) begin
    26              1                       3530     	else if (wr_en && !full) begin
    32              1                       6144     	else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    34                                      6144     Count coming in to IF
    34              1                       3369     		if (full && wr_en) 
    36              1                       2775     	    else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                      6909     Count coming in to IF
    42              1                        192     	if (!rst_n) begin
    46              1                       2832     	else if (rd_en && !empty) begin
    51              1                         40     	else if (rd_en && empty)
    53              1                       3845         else	
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    58                                      8273     Count coming in to IF
    58              1                        192     	if (!rst_n) begin
    61              1                       8081     	else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    62                                      8081     Count coming in to IF
    62              1                       2509     		if	( (({wr_en, rd_en} == 2'b10) && !full)) 
    64              1                        865     		else if ( (({wr_en, rd_en} == 2'b01) && !empty))
    66              1                         28     		else if ( (({wr_en, rd_en} == 2'b11) && empty))
    68              1                        974     		else if ( (({wr_en, rd_en} == 2'b11) && full))
                                            3705     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                      4472     Count coming in to IF
    73              1                       1450     assign full = (count == FIFO_DEPTH)? 1 : 0;
    73              2                       3022     assign full = (count == FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                      4472     Count coming in to IF
    74              1                        109     assign empty = (count == 0)? 1 : 0;
    74              2                       4363     assign empty = (count == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                      4472     Count coming in to IF
    75              1                       1756     assign almostfull = (count == FIFO_DEPTH-1)? 1 : 0; 
    75              2                       2716     assign almostfull = (count == FIFO_DEPTH-1)? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    76                                      4472     Count coming in to IF
    76              1                        129     assign almostempty = (count == 1)? 1 : 0;
    76              2                       4343     assign almostempty = (count == 1)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      24        23         1    95.83%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/dut --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       26 Item    1  (wr_en && ~full)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       wr_en         Y
        full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  wr_en_0               -                             
  Row   2:          1  wr_en_1               ~full                         
  Row   3:          1  full_0                wr_en                         
  Row   4:          1  full_1                wr_en                         

----------------Focused Condition View-------------------
Line       34 Item    1  (full && wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        full         Y
       wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  full_0                -                             
  Row   2:          1  full_1                wr_en                         
  Row   3:          1  wr_en_0               full                          
  Row   4:          1  wr_en_1               full                          

----------------Focused Condition View-------------------
Line       46 Item    1  (rd_en && ~empty)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               ~empty                        
  Row   3:          1  empty_0               rd_en                         
  Row   4:          1  empty_1               rd_en                         

----------------Focused Condition View-------------------
Line       51 Item    1  (rd_en && empty)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       empty         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               empty                         
  Row   3:    ***0***  empty_0               rd_en                         
  Row   4:          1  empty_1               rd_en                         

----------------Focused Condition View-------------------
Line       62 Item    1  ((~rd_en && wr_en) && ~full)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
        full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               (~full && wr_en)              
  Row   2:          1  rd_en_1               -                             
  Row   3:          1  wr_en_0               ~rd_en                        
  Row   4:          1  wr_en_1               (~full && ~rd_en)             
  Row   5:          1  full_0                (~rd_en && wr_en)             
  Row   6:          1  full_1                (~rd_en && wr_en)             

----------------Focused Condition View-------------------
Line       64 Item    1  ((rd_en && ~wr_en) && ~empty)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
       empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (~empty && ~wr_en)            
  Row   3:          1  wr_en_0               (~empty && rd_en)             
  Row   4:          1  wr_en_1               rd_en                         
  Row   5:          1  empty_0               (rd_en && ~wr_en)             
  Row   6:          1  empty_1               (rd_en && ~wr_en)             

----------------Focused Condition View-------------------
Line       66 Item    1  ((rd_en && wr_en) && empty)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
       empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (empty && wr_en)              
  Row   3:          1  wr_en_0               rd_en                         
  Row   4:          1  wr_en_1               (empty && rd_en)              
  Row   5:          1  empty_0               (rd_en && wr_en)              
  Row   6:          1  empty_1               (rd_en && wr_en)              

----------------Focused Condition View-------------------
Line       68 Item    1  ((rd_en && wr_en) && full)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
        full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (full && wr_en)               
  Row   3:          1  wr_en_0               rd_en                         
  Row   4:          1  wr_en_1               (full && rd_en)               
  Row   5:          1  full_0                (rd_en && wr_en)              
  Row   6:          1  full_1                (rd_en && wr_en)              

----------------Focused Condition View-------------------
Line       73 Item    1  (count == 8)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 8)_0        -                             
  Row   2:          1  (count == 8)_1        -                             

----------------Focused Condition View-------------------
Line       74 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       75 Item    1  (count == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (count == (8 - 1))         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == (8 - 1))_0  -                             
  Row   2:          1  (count == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       76 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        29         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/dut --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    9                                                module FIFO(clk, rst_n, wr_en, rd_en, wr_ack, overflow, full, empty, almostfull, almostempty, underflow, data_in, data_out);
    10                                               input clk, rst_n, wr_en, rd_en;
    11                                               input [FIFO_WIDTH-1:0] data_in;
    12                                               output reg wr_ack, overflow, full, empty, almostfull, almostempty, underflow;
    13                                               output reg [FIFO_WIDTH-1:0] data_out;
    14                                                
    15                                               localparam max_fifo_addr = $clog2(FIFO_DEPTH);
    16                                               reg [FIFO_WIDTH-1:0] mem [FIFO_DEPTH-1:0];
    17                                               reg [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    18                                               reg [max_fifo_addr:0] count;
    19                                               
    20              1                       9867     always @(posedge clk or negedge rst_n) begin
    21                                               	if (!rst_n) begin
    22              1                        193     		wr_ptr <= 0;
    23              1                        193     		wr_ack <= 0;
    24              1                        193     		overflow <= 0;
    25                                               	end
    26                                               	else if (wr_en && !full) begin
    27              1                       3530     		mem[wr_ptr] <= data_in;
    28              1                       3530     		wr_ack <= 1;
    29              1                       3530     		wr_ptr <= wr_ptr + 1;
    30              1                       3530     		overflow <= 0;
    31                                               	end
    32                                               	else begin 
    33              1                       6144     		wr_ack <= 0; 
    34                                               		if (full && wr_en) 
    35              1                       3369     			overflow <= 1;
    36                                               	    else
    37              1                       2775     			overflow <= 0;
    38                                               	end
    39                                               end
    40                                               
    41              1                       6909     always @(posedge clk or negedge rst_n) begin
    42                                               	if (!rst_n) begin
    43              1                        192     		rd_ptr <= 0;
    44              1                        192     		underflow <= 0;
    45                                               	end
    46                                               	else if (rd_en && !empty) begin
    47              1                       2832     		data_out <= mem[rd_ptr];
    48              1                       2832     		rd_ptr <= rd_ptr + 1;
    49              1                       2832     		underflow <= 0;
    50                                               	end
    51                                               	else if (rd_en && empty)
    52              1                         40     		underflow <= 1;
    53                                                   else	
    54              1                       3845     		underflow <= 0;
    55                                               end
    56                                               
    57              1                       8273     always @(posedge clk or negedge rst_n) begin
    58                                               	if (!rst_n) begin
    59              1                        192     		count <= 0;
    60                                               	end
    61                                               	else begin
    62                                               		if	( (({wr_en, rd_en} == 2'b10) && !full)) 
    63              1                       2509     			count <= count + 1;
    64                                               		else if ( (({wr_en, rd_en} == 2'b01) && !empty))
    65              1                        865     			count <= count - 1;
    66                                               		else if ( (({wr_en, rd_en} == 2'b11) && empty))
    67              1                         28     			count <= count + 1;	
    68                                               		else if ( (({wr_en, rd_en} == 2'b11) && full))
    69              1                        974     			count <= count - 1;	
    70                                               	end
    71                                               end
    72                                               
    73              1                       4473     assign full = (count == FIFO_DEPTH)? 1 : 0;
    74              1                       4473     assign empty = (count == 0)? 1 : 0;
    75              1                       4473     assign almostfull = (count == FIFO_DEPTH-1)? 1 : 0; 
    76              1                       4473     assign almostempty = (count == 1)? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        106       106         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/dut --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                        count[3-0]           1           1      100.00 
                                     data_in[0-15]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         53 
Toggled Node Count   =         53 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (106 of 106 bins)

=================================================================================
=== Instance: /FIFO_top
=== Design Unit: work.FIFO_top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       5         5         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_top.sv
    5                                                module FIFO_top();
    6                                                    bit clk;
    7                                                
    8                                                    initial begin
    9               1                          1             forever 
    10              1                      20001              #1 clk = ~clk;
    10              2                      20000     
    11                                                   end
    12                                                   
    13                                                   FIFO_if fifoif (clk);
    14                                                   FIFO dut (
    15                                                       clk,
    16                                                       fifoif.rst_n, 
    17                                                       fifoif.wr_en, 
    18                                                       fifoif.rd_en, 
    19                                                       fifoif.wr_ack, 
    20                                                       fifoif.overflow, 
    21                                                       fifoif.full, 
    22                                                       fifoif.empty, 
    23                                                       fifoif.almostfull, 
    24                                                       fifoif.almostempty, 
    25                                                       fifoif.underflow, 
    26                                                       fifoif.data_in, 
    27                                                       fifoif.data_out
    28                                                   );
    29                                                   bind FIFO FIFO_SVA fifo_sva_inst (
    30                                                       clk,
    31                                                       fifoif.rst_n, 
    32                                                       fifoif.wr_en, 
    33                                                       fifoif.rd_en, 
    34                                                       fifoif.wr_ack, 
    35                                                       fifoif.overflow, 
    36                                                       fifoif.full, 
    37                                                       fifoif.empty, 
    38                                                       fifoif.almostfull, 
    39                                                       fifoif.almostempty, 
    40                                                       fifoif.underflow, 
    41                                                       fifoif.data_in, 
    42                                                       fifoif.data_out
    43                                                   );
    44                                               
    45                                                   initial begin
    46              1                          1             uvm_config_db#(virtual FIFO_if)::set(null, "uvm_test_top", "FIFO_IF", fifoif);
    47              1                          1             run_test("FIFO_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /FIFO_read_sequence_item_pkg
=== Design Unit: work.FIFO_read_sequence_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_sequence_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_sequence_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                      10000     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
    6               4                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                      10000     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_read_sequence_item_pkg --

  File FIFO_read_sequence_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      16         6        10    37.50%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_sequence_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_sequence_item.sv
    1                                                package FIFO_read_sequence_item_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    class FIFO_read_sequence_item extends uvm_sequence_item;
    6               1                    ***0***             `uvm_object_utils(FIFO_read_sequence_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                      10000     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                      10000     
    6              10                    ***0***     
    7                                                
    8                                                        rand bit rst_n, rd_en;
    9                                                        bit [FIFO_WIDTH-1:0] data_out;
    10                                                       bit underflow, empty, almostempty;
    11                                               
    12                                                       // Distribution variables
    13                                                       int RD_EN_ON_DIST;
    14                                                       int WR_EN_ON_DIST;
    15                                               
    16                                                       function new(string name = "FIFO_read_sequence_item", int rd_dist = 30);
    17              1                      30002                 super.new(name);
    18              1                      30002                 RD_EN_ON_DIST = rd_dist;
    19              1                      30002                 rst_n = 1;
    20              1                      30002                 rd_en = 0;
    21                                                       endfunction
    22                                               
    23                                                       function string convert2string();
    24              1                    ***0***                 return $sformatf("%s reset = 0b%0b, rd_en = 0b%0b, underflow = 0b%0b, empty = 0b%0b, almostempty = 0b%0b, data_out = 0x%0h", super.convert2string(),
    25                                                           rst_n, rd_en, underflow, empty, almostempty, data_out);
    26                                                       endfunction
    27                                               
    28                                                       function string convert2string_stimulus();
    29              1                    ***0***                 return $sformatf("reset = 0b%0b, rd_en = 0b%0b", rst_n, rd_en);


=================================================================================
=== Instance: /FIFO_write_sequence_item_pkg
=== Design Unit: work.FIFO_write_sequence_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_sequence_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_sequence_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                      10000     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
    6               4                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                      10000     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_write_sequence_item_pkg --

  File FIFO_write_sequence_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      17         7        10    41.17%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_sequence_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_sequence_item.sv
    1                                                package FIFO_write_sequence_item_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    class FIFO_write_sequence_item extends uvm_sequence_item;
    6               1                    ***0***             `uvm_object_utils(FIFO_write_sequence_item)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                      10000     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                      10000     
    6              10                    ***0***     
    7                                                
    8                                                        rand bit rst_n, wr_en;
    9                                                        rand bit [FIFO_WIDTH-1:0] data_in;
    10                                                       bit wr_ack, overflow, full, almostfull;
    11                                               
    12                                                       // Distribution variable
    13                                                       int WR_EN_ON_DIST;
    14                                               
    15                                                       function new(string name = "FIFO_write_sequence_item", int wr_dist = 70);
    16              1                      30002                 super.new(name);
    17              1                      30002                 WR_EN_ON_DIST = wr_dist;
    18              1                      30002                 rst_n = 1;
    19              1                      30002                 wr_en = 0;
    20              1                      30002                 data_in = 0;
    21                                                       endfunction
    22                                               
    23                                                       function string convert2string();
    24              1                    ***0***                 return $sformatf("%s reset = 0b%0b, wr_en = 0b%0b, data_in = 0x%0h, wr_ack = 0b%0b, overflow = 0b%0b, full = 0b%0b, almostfull = 0b%0b", super.convert2string(),
    25                                                           rst_n, wr_en, data_in, wr_ack, overflow, full, almostfull);
    26                                                       endfunction
    27                                               
    28                                                       function string convert2string_stimulus();
    29              1                    ***0***                 return $sformatf("reset = 0b%0b, wr_en = 0b%0b, data_in = 0x%0h", rst_n, wr_en, data_in);


=================================================================================
=== Instance: /FIFO_sequence_pkg
=== Design Unit: work.FIFO_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_sequence_pkg/write_sequence/body/#ublk#38615015#23/immed__26
                     FIFO_sequence.sv(26)               0          1
/FIFO_sequence_pkg/read_sequence/body/#ublk#38615015#46/immed__49
                     FIFO_sequence.sv(49)               0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         4        16    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequence.sv
------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               1                    ***0***             `uvm_object_utils(write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               2                    ***0***             `uvm_object_utils(write_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               3                    ***0***             `uvm_object_utils(write_sequence)
    9               4                    ***0***             `uvm_object_utils(write_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    9                                          1     Count coming in to IF
    9               5                    ***0***             `uvm_object_utils(write_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    9                                    ***0***     Count coming in to IF
    9               6                    ***0***             `uvm_object_utils(write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    33                                   ***0***     Count coming in to IF
    33              1                    ***0***             `uvm_object_utils(read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              2                    ***0***             `uvm_object_utils(read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    33                                   ***0***     Count coming in to IF
    33              3                    ***0***             `uvm_object_utils(read_sequence)
    33              4                    ***0***             `uvm_object_utils(read_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              5                    ***0***             `uvm_object_utils(read_sequence)
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    33                                   ***0***     Count coming in to IF
    33              6                    ***0***             `uvm_object_utils(read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       4         0         4     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_sequence_pkg --

  File FIFO_sequence.sv
----------------Focused Condition View-------------------
Line       9 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       9 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             

----------------Focused Condition View-------------------
Line       33 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       33 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      41        25        16    60.97%

================================Statement Details================================

Statement Coverage for instance /FIFO_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequence.sv
    1                                                package FIFO_sequence_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_write_sequence_item_pkg::*;
    6                                                    import FIFO_read_sequence_item_pkg::*;
    7                                                
    8                                                    class write_sequence extends uvm_sequence #(FIFO_write_sequence_item);
    9               1                    ***0***             `uvm_object_utils(write_sequence)
    9               2                    ***0***     
    9               3                    ***0***     
    9               4                    ***0***     
    9               5                    ***0***     
    9               6                          1     
    9               7                    ***0***     
    9               8                    ***0***     
    9               9                          1     
    9              10                    ***0***     
    10                                                       FIFO_write_sequence_item seq_item;
    11                                               
    12                                                       function new(string name = "write_sequence");
    13              1                          1                 super.new(name);
    14                                                       endfunction
    15                                               
    16                                                       task body;
    17              1                          1                 seq_item = FIFO_write_sequence_item::type_id::create("seq_item");
    18              1                          1                 start_item(seq_item);
    19              1                          1                 seq_item.rst_n = 0;
    20              1                          1                 seq_item.wr_en = 0;
    21              1                          1                 seq_item.data_in = 0;
    22              1                          1                 finish_item(seq_item);
    23              1                       9999                 repeat(9999) begin
    24              1                       9999                     seq_item = FIFO_write_sequence_item::type_id::create("seq_item");
    25              1                       9999                     start_item(seq_item);
    26                                                               assert(seq_item.randomize());
    27              1                       9999                     finish_item(seq_item);
    28                                                           end
    29                                                       endtask
    30                                                   endclass
    31                                               
    32                                                   class read_sequence extends uvm_sequence #(FIFO_read_sequence_item);
    33              1                    ***0***             `uvm_object_utils(read_sequence)
    33              2                    ***0***     
    33              3                    ***0***     
    33              4                    ***0***     
    33              5                    ***0***     
    33              6                          1     
    33              7                    ***0***     
    33              8                    ***0***     
    33              9                          1     
    33             10                    ***0***     
    34                                                       FIFO_read_sequence_item seq_item;
    35                                               
    36                                                       function new(string name = "read_sequence");
    37              1                          1                 super.new(name);
    38                                                       endfunction
    39                                               
    40                                                       task body;
    41              1                          1                 seq_item = FIFO_read_sequence_item::type_id::create("seq_item");
    42              1                          1                 start_item(seq_item);
    43              1                          1                 seq_item.rst_n = 0;
    44              1                          1                 seq_item.rd_en = 0;
    45              1                          1                 finish_item(seq_item);
    46              1                       9999                 repeat(9999) begin
    47              1                       9999                     seq_item = FIFO_read_sequence_item::type_id::create("seq_item");
    48              1                       9999                     start_item(seq_item);
    49                                                               assert(seq_item.randomize());
    50              1                       9999                     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_coverage_pkg
=== Design Unit: work.FIFO_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         16        na        na        na
            Covergroup Bins         66        66         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/fifo_cvg       100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_en_0                                      3036          1          -    Covered              
        bin wr_en_1                                      6964          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rd_en_0                                      7100          1          -    Covered              
        bin rd_en_1                                      2900          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_ack_0                                     6470          1          -    Covered              
        bin wr_ack_1                                     3530          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_0                                   6631          1          -    Covered              
        bin overflow_1                                   3369          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_0                                  9960          1          -    Covered              
        bin underflow_1                                    40          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_0                                       5107          1          -    Covered              
        bin full_1                                       4893          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_0                                      9851          1          -    Covered              
        bin empty_1                                       149          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_0                                 7014          1          -    Covered              
        bin almostfull_1                                 2986          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_0                                9774          1          -    Covered              
        bin almostempty_1                                 226          1          -    Covered              
    Cross WR_ACK_CX                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,wr_ack_1>               1021          1          -    Covered              
            bin <wr_en_1,rd_en_0,wr_ack_1>               2509          1          -    Covered              
            bin <wr_en_1,rd_en_1,wr_ack_0>                991          1          -    Covered              
            bin <wr_en_1,rd_en_0,wr_ack_0>               2443          1          -    Covered              
            bin <wr_en_0,rd_en_1,wr_ack_0>                888          1          -    Covered              
            bin <wr_en_0,rd_en_0,wr_ack_0>               2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_0_wr_ack_1_rd_en_1             0                     -    ZERO                 
            ignore_bin wr_en_0_wr_ack_1_rd_en_0             0                     -    ZERO                 
    Cross OVERFLOW_CX                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,overflow_1>              974          1          -    Covered              
            bin <wr_en_1,rd_en_0,overflow_1>             2395          1          -    Covered              
            bin <wr_en_1,rd_en_1,overflow_0>             1038          1          -    Covered              
            bin <wr_en_1,rd_en_0,overflow_0>             2557          1          -    Covered              
            bin <wr_en_0,rd_en_1,overflow_0>              888          1          -    Covered              
            bin <wr_en_0,rd_en_0,overflow_0>             2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_0_overflow_1_rd_en_1           0                     -    ZERO                 
            ignore_bin wr_en_0_overflow_1_rd_en_0           0                     -    ZERO                 
    Cross UNDERFLOW_CX                                100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,underflow_1>              28          1          -    Covered              
            bin <wr_en_0,rd_en_1,underflow_1>              12          1          -    Covered              
            bin <wr_en_1,rd_en_1,underflow_0>            1984          1          -    Covered              
            bin <wr_en_1,rd_en_0,underflow_0>            4952          1          -    Covered              
            bin <wr_en_0,rd_en_1,underflow_0>             876          1          -    Covered              
            bin <wr_en_0,rd_en_0,underflow_0>            2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_1_underflow_1_rd_en_0          0                     -    ZERO                 
            ignore_bin wr_en_0_underflow_1_rd_en_0          0                     -    ZERO                 
    Cross FULL_CX                                     100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_0,full_1>                 3845          1          -    Covered              
            bin <wr_en_0,rd_en_0,full_1>                 1048          1          -    Covered              
            bin <wr_en_1,rd_en_1,full_0>                 2012          1          -    Covered              
            bin <wr_en_1,rd_en_0,full_0>                 1107          1          -    Covered              
            bin <wr_en_0,rd_en_1,full_0>                  888          1          -    Covered              
            bin <wr_en_0,rd_en_0,full_0>                 1100          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_1_full_1_rd_en_1               0                     -    ZERO                 
            ignore_bin wr_en_0_full_1_rd_en_1               0                     -    ZERO                 
    Cross EMPTY_CX                                    100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,empty_1>                  17          1          -    Covered              
            bin <wr_en_0,rd_en_1,empty_1>                  36          1          -    Covered              
            bin <wr_en_1,rd_en_0,empty_1>                  48          1          -    Covered              
            bin <wr_en_0,rd_en_0,empty_1>                  48          1          -    Covered              
            bin <wr_en_1,rd_en_1,empty_0>                1995          1          -    Covered              
            bin <wr_en_0,rd_en_1,empty_0>                 852          1          -    Covered              
            bin <wr_en_1,rd_en_0,empty_0>                4904          1          -    Covered              
            bin <wr_en_0,rd_en_0,empty_0>                2100          1          -    Covered              
    Cross ALMOSTFULL_CX                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,almostfull_1>           1553          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostfull_1>            419          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostfull_1>            363          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostfull_1>            651          1          -    Covered              
            bin <wr_en_1,rd_en_1,almostfull_0>            459          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostfull_0>            469          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostfull_0>           4589          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostfull_0>           1497          1          -    Covered              
    Cross ALMOSTEMPTY_CX                              100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,almostempty_1>            73          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostempty_1>            21          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostempty_1>            80          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostempty_1>            52          1          -    Covered              
            bin <wr_en_1,rd_en_1,almostempty_0>          1939          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostempty_0>           867          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostempty_0>          4872          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostempty_0>          2096          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        16         2    88.88%

================================Statement Details================================

Statement Coverage for instance /FIFO_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_coverage.sv
    1                                                package FIFO_coverage_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_write_sequence_item_pkg::*;
    6                                                    import FIFO_read_sequence_item_pkg::*;
    7                                                
    8                                                    class FIFO_coverage extends uvm_component;
    9               1                    ***0***             `uvm_component_utils(FIFO_coverage)
    9               2                    ***0***     
    9               3                          2     
    10                                                       uvm_analysis_export #(FIFO_write_sequence_item) cov_export_wr;
    11                                                       uvm_tlm_analysis_fifo #(FIFO_write_sequence_item) cov_fifo_wr;
    12                                                       FIFO_write_sequence_item seq_item_cov_wr;
    13                                                       uvm_analysis_export #(FIFO_read_sequence_item) cov_export_rd;
    14                                                       uvm_tlm_analysis_fifo #(FIFO_read_sequence_item) cov_fifo_rd;
    15                                                       FIFO_read_sequence_item seq_item_cov_rd;
    16                                               
    17                                                       //////////////////////////////// Covergroups /////////////////////////////////
    18                                                       covergroup fifo_cvg;
    19                                                        // Coverpoints 
    20                                                           wr_en_cp: coverpoint seq_item_cov_wr.wr_en {
    21                                                               bins wr_en_0 = {0};
    22                                                               bins wr_en_1 = {1};
    23                                                           } 
    24                                                           rd_en_cp: coverpoint seq_item_cov_rd.rd_en {
    25                                                               bins rd_en_0 = {0};
    26                                                               bins rd_en_1 = {1};
    27                                                           } 
    28                                                           wr_ack_cp: coverpoint seq_item_cov_wr.wr_ack {
    29                                                               bins wr_ack_0 = {0};
    30                                                               bins wr_ack_1 = {1};
    31                                                           } 
    32                                                           overflow_cp: coverpoint seq_item_cov_wr.overflow {
    33                                                               bins overflow_0 = {0};
    34                                                               bins overflow_1 = {1};
    35                                                           } 
    36                                                           underflow_cp: coverpoint seq_item_cov_rd.underflow {
    37                                                               bins underflow_0 = {0};
    38                                                               bins underflow_1 = {1};
    39                                                           }
    40                                                           full_cp: coverpoint seq_item_cov_wr.full {
    41                                                               bins full_0 = {0};
    42                                                               bins full_1 = {1};
    43                                                           }  
    44                                                           empty_cp: coverpoint seq_item_cov_rd.empty {
    45                                                               bins empty_0 = {0};
    46                                                               bins empty_1 = {1};
    47                                                           } 
    48                                                           almostfull_cp: coverpoint seq_item_cov_wr.almostfull {
    49                                                               bins almostfull_0 = {0};
    50                                                               bins almostfull_1 = {1};
    51                                                           }
    52                                                           almostempty_cp: coverpoint seq_item_cov_rd.almostempty {
    53                                                               bins almostempty_0 = {0};
    54                                                               bins almostempty_1 = {1};
    55                                                           }
    56                                                        // cross coverage 
    57                                                           WR_ACK_CX: cross wr_en_cp, rd_en_cp, wr_ack_cp {
    58                                                               ignore_bins wr_en_0_wr_ack_1_rd_en_0 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_0) && binsof(wr_ack_cp.wr_ack_1);
    59                                                               ignore_bins wr_en_0_wr_ack_1_rd_en_1 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_1) && binsof(wr_ack_cp.wr_ack_1);
    60                                                           }
    61                                                           OVERFLOW_CX: cross wr_en_cp, rd_en_cp, overflow_cp {
    62                                                               ignore_bins wr_en_0_overflow_1_rd_en_0 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_0) && binsof(overflow_cp.overflow_1);
    63                                                               ignore_bins wr_en_0_overflow_1_rd_en_1 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_1) && binsof(overflow_cp.overflow_1);
    64                                                           }
    65                                                           UNDERFLOW_CX: cross wr_en_cp, rd_en_cp, underflow_cp {
    66                                                               ignore_bins wr_en_0_underflow_1_rd_en_0 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_0) && binsof(underflow_cp.underflow_1);
    67                                                               ignore_bins wr_en_1_underflow_1_rd_en_0 = binsof(wr_en_cp.wr_en_1) && binsof(rd_en_cp.rd_en_0) && binsof(underflow_cp.underflow_1);
    68                                                           } 
    69                                                           FULL_CX: cross wr_en_cp, rd_en_cp, full_cp {
    70                                                               ignore_bins wr_en_0_full_1_rd_en_1 = binsof(wr_en_cp.wr_en_0) && binsof(rd_en_cp.rd_en_1) && binsof(full_cp.full_1);
    71                                                               ignore_bins wr_en_1_full_1_rd_en_1 = binsof(wr_en_cp.wr_en_1) && binsof(rd_en_cp.rd_en_1) && binsof(full_cp.full_1);
    72                                                           }
    73                                                           EMPTY_CX: cross wr_en_cp, rd_en_cp, empty_cp; 
    74                                                           ALMOSTFULL_CX: cross wr_en_cp, rd_en_cp, almostfull_cp; 
    75                                                           ALMOSTEMPTY_CX: cross wr_en_cp, rd_en_cp, almostempty_cp; 
    76                                                       endgroup
    77                                               
    78                                               
    79                                                       function new(string name = "FIFO_coverage", uvm_component parent = null);
    80              1                          1                 super.new(name, parent);
    81              1                          1                 fifo_cvg = new();
    82                                                       endfunction
    83                                               
    84                                                       function void build_phase(uvm_phase phase);
    85              1                          1                 super.build_phase(phase);
    86              1                          1                 cov_export_wr = new("cov_export_wr", this);
    87              1                          1                 cov_fifo_wr = new("cov_fifo_wr", this);
    88              1                          1                 cov_export_rd = new("cov_export_rd", this);
    89              1                          1                 cov_fifo_rd = new("cov_fifo_rd", this);
    90                                                       endfunction
    91                                               
    92                                                       function void connect_phase (uvm_phase phase);
    93              1                          1                 super.connect_phase(phase);
    94              1                          1                 cov_export_wr.connect(cov_fifo_wr.analysis_export);
    95              1                          1                 cov_export_rd.connect(cov_fifo_rd.analysis_export);
    96                                                       endfunction
    97                                               
    98                                                       task run_phase(uvm_phase phase);
    99              1                          1                 super.run_phase(phase);
    100             1                          1                 forever begin
    101             1                      10001                     cov_fifo_wr.get(seq_item_cov_wr);
    102             1                      10000                     cov_fifo_rd.get(seq_item_cov_rd);
    103             1                      10000                     fifo_cvg.sample();


=================================================================================
=== Instance: /FIFO_scoreboard_pkg
=== Design Unit: work.FIFO_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        21        13         8    61.90%

================================Branch Details================================

Branch Coverage for instance /FIFO_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
------------------------------------IF Branch------------------------------------
    49                                     10000     Count coming in to IF
    49              1                    ***0***                     if(seq_item_sb_rd.data_out != data_out_ref) begin
    54              1                      10000                     else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    50                                   ***0***     Count coming in to IF
    50              1                    ***0***                         `uvm_error("run_phase", $sformatf("Time: %0t: Comparison failed, Transaction received by the DUT: %s 
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    55                                     10000     Count coming in to IF
    55              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct ALSU out: %s", seq_item_sb_rd.convert2string()), UVM_HIGH);
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    63                                     10000     Count coming in to IF
    63              1                         97                 if (!seq_item_chk_rd.rst_n || !seq_item_chk_wr.rst_n) begin
    67              1                       9903                 end else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                      9903     Count coming in to IF
    69              1                       3530                     if (seq_item_chk_wr.wr_en && !seq_item_chk_wr.overflow) begin
                                            6373     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    74                                      9903     Count coming in to IF
    74              1                       2832                     if (seq_item_chk_rd.rd_en && !seq_item_chk_rd.underflow) begin
                                            7071     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    79                                      9903     Count coming in to IF
    79              1                       1059                     if	(seq_item_chk_wr.wr_en && !seq_item_chk_rd.rd_en && !seq_item_chk_wr.full) 
    81              1                        852                     else if (!seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && !seq_item_chk_rd.empty)
    83              1                    ***0***                     else if (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_rd.empty)
    85              1                    ***0***                     else if (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_wr.full)
                                            7992     All False Count
Branch totals: 3 hits of 5 branches = 60.00%

------------------------------------IF Branch------------------------------------
    92                                         1     Count coming in to IF
    92              1                          1                 `uvm_info("run_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    93                                         1     Count coming in to IF
    93              1                          1                 `uvm_info("run_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      19        11         8    57.89%

================================Condition Details================================

Condition Coverage for instance /FIFO_scoreboard_pkg --

  File FIFO_scoreboard.sv
----------------Focused Condition View-------------------
Line       49 Item    1  (this.seq_item_sb_rd.data_out != this.data_out_ref)
Condition totals: 0 of 1 input term covered = 0.00%

                                           Input Term   Covered  Reason for no coverage   Hint
                                          -----------  --------  -----------------------  --------------
  (this.seq_item_sb_rd.data_out != this.data_out_ref)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                                             Non-masking condition(s)      
 ---------  ---------  --------------------                                   -------------------------     
  Row   1:          1  (this.seq_item_sb_rd.data_out != this.data_out_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb_rd.data_out != this.data_out_ref)_1  -                             

----------------Focused Condition View-------------------
Line       63 Item    1  (~seq_item_chk_rd.rst_n || ~seq_item_chk_wr.rst_n)
Condition totals: 1 of 2 input terms covered = 50.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  seq_item_chk_rd.rst_n         Y
  seq_item_chk_wr.rst_n         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  seq_item_chk_rd.rst_n_0  -                             
  Row   2:          1  seq_item_chk_rd.rst_n_1  seq_item_chk_wr.rst_n         
  Row   3:    ***0***  seq_item_chk_wr.rst_n_0  seq_item_chk_rd.rst_n         
  Row   4:          1  seq_item_chk_wr.rst_n_1  seq_item_chk_rd.rst_n         

----------------Focused Condition View-------------------
Line       69 Item    1  (seq_item_chk_wr.wr_en && ~seq_item_chk_wr.overflow)
Condition totals: 2 of 2 input terms covered = 100.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
     seq_item_chk_wr.wr_en         Y
  seq_item_chk_wr.overflow         Y

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:          1  seq_item_chk_wr.wr_en_0     -                             
  Row   2:          1  seq_item_chk_wr.wr_en_1     ~seq_item_chk_wr.overflow     
  Row   3:          1  seq_item_chk_wr.overflow_0  seq_item_chk_wr.wr_en         
  Row   4:          1  seq_item_chk_wr.overflow_1  seq_item_chk_wr.wr_en         

----------------Focused Condition View-------------------
Line       74 Item    1  (seq_item_chk_rd.rd_en && ~seq_item_chk_rd.underflow)
Condition totals: 2 of 2 input terms covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
      seq_item_chk_rd.rd_en         Y
  seq_item_chk_rd.underflow         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  seq_item_chk_rd.rd_en_0      -                             
  Row   2:          1  seq_item_chk_rd.rd_en_1      ~seq_item_chk_rd.underflow    
  Row   3:          1  seq_item_chk_rd.underflow_0  seq_item_chk_rd.rd_en         
  Row   4:          1  seq_item_chk_rd.underflow_1  seq_item_chk_rd.rd_en         

----------------Focused Condition View-------------------
Line       79 Item    1  (seq_item_chk_wr.wr_en && ~seq_item_chk_rd.rd_en && ~seq_item_chk_wr.full)
Condition totals: 3 of 3 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  seq_item_chk_wr.wr_en         Y
  seq_item_chk_rd.rd_en         Y
   seq_item_chk_wr.full         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  seq_item_chk_wr.wr_en_0  -                             
  Row   2:          1  seq_item_chk_wr.wr_en_1  (~seq_item_chk_rd.rd_en && ~seq_item_chk_wr.full)
  Row   3:          1  seq_item_chk_rd.rd_en_0  (seq_item_chk_wr.wr_en && ~seq_item_chk_wr.full)
  Row   4:          1  seq_item_chk_rd.rd_en_1  seq_item_chk_wr.wr_en         
  Row   5:          1  seq_item_chk_wr.full_0   (seq_item_chk_wr.wr_en && ~seq_item_chk_rd.rd_en)
  Row   6:          1  seq_item_chk_wr.full_1   (seq_item_chk_wr.wr_en && ~seq_item_chk_rd.rd_en)

----------------Focused Condition View-------------------
Line       81 Item    1  (~seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && ~seq_item_chk_rd.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  seq_item_chk_wr.wr_en         Y
  seq_item_chk_rd.rd_en         Y
  seq_item_chk_rd.empty         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  seq_item_chk_wr.wr_en_0  (seq_item_chk_rd.rd_en && ~seq_item_chk_rd.empty)
  Row   2:          1  seq_item_chk_wr.wr_en_1  -                             
  Row   3:          1  seq_item_chk_rd.rd_en_0  ~seq_item_chk_wr.wr_en        
  Row   4:          1  seq_item_chk_rd.rd_en_1  (~seq_item_chk_wr.wr_en && ~seq_item_chk_rd.empty)
  Row   5:          1  seq_item_chk_rd.empty_0  (~seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)
  Row   6:          1  seq_item_chk_rd.empty_1  (~seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)

----------------Focused Condition View-------------------
Line       83 Item    1  (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_rd.empty)
Condition totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  seq_item_chk_wr.wr_en         N  '_1' not hit             Hit '_1'
  seq_item_chk_rd.rd_en         N  '_1' not hit             Hit '_1'
  seq_item_chk_rd.empty         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  seq_item_chk_wr.wr_en_0  -                             
  Row   2:    ***0***  seq_item_chk_wr.wr_en_1  (seq_item_chk_rd.rd_en && seq_item_chk_rd.empty)
  Row   3:          1  seq_item_chk_rd.rd_en_0  seq_item_chk_wr.wr_en         
  Row   4:    ***0***  seq_item_chk_rd.rd_en_1  (seq_item_chk_wr.wr_en && seq_item_chk_rd.empty)
  Row   5:          1  seq_item_chk_rd.empty_0  (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)
  Row   6:    ***0***  seq_item_chk_rd.empty_1  (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)

----------------Focused Condition View-------------------
Line       85 Item    1  (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_wr.full)
Condition totals: 0 of 3 input terms covered = 0.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  seq_item_chk_wr.wr_en         N  '_1' not hit             Hit '_1'
  seq_item_chk_rd.rd_en         N  '_1' not hit             Hit '_1'
   seq_item_chk_wr.full         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  seq_item_chk_wr.wr_en_0  -                             
  Row   2:    ***0***  seq_item_chk_wr.wr_en_1  (seq_item_chk_rd.rd_en && seq_item_chk_wr.full)
  Row   3:          1  seq_item_chk_rd.rd_en_0  seq_item_chk_wr.wr_en         
  Row   4:    ***0***  seq_item_chk_rd.rd_en_1  (seq_item_chk_wr.wr_en && seq_item_chk_wr.full)
  Row   5:          1  seq_item_chk_wr.full_0   (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)
  Row   6:    ***0***  seq_item_chk_wr.full_1   (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en)


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      37        30         7    81.08%

================================Statement Details================================

Statement Coverage for instance /FIFO_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
    1                                                package FIFO_scoreboard_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_write_sequence_item_pkg::*;
    6                                                    import FIFO_read_sequence_item_pkg::*;
    7                                                
    8                                                    class FIFO_scoreboard extends uvm_scoreboard;
    9               1                    ***0***             `uvm_component_utils(FIFO_scoreboard)
    9               2                    ***0***     
    9               3                          2     
    10                                                       uvm_analysis_export #(FIFO_write_sequence_item) sb_export_wr;
    11                                                       uvm_tlm_analysis_fifo #(FIFO_write_sequence_item) sb_fifo_wr;
    12                                                       FIFO_write_sequence_item seq_item_sb_wr;
    13                                                       uvm_analysis_export #(FIFO_read_sequence_item) sb_export_rd;
    14                                                       uvm_tlm_analysis_fifo #(FIFO_read_sequence_item) sb_fifo_rd;
    15                                                       FIFO_read_sequence_item seq_item_sb_rd;
    16                                                       // Reference model variables
    17                                                       bit [FIFO_WIDTH-1:0] data_out_ref;
    18                                                       // FIFO memory and pointers
    19                                                       bit [FIFO_WIDTH-1:0] ref_mem [0:FIFO_DEPTH-1];  // FIFO reference
    20                                                       bit [$clog2(FIFO_DEPTH)-1:0] wr_ptr, rd_ptr;
    21                                                       bit [$clog2(FIFO_DEPTH):0] count;
    22              1                          1             int error_count = 0;
    23              1                          1             int correct_count = 0;
    24                                               
    25                                                       function new(string name = "FIFO_scoreboard", uvm_component parent = null);
    26              1                          1                 super.new(name, parent);
    27                                                       endfunction
    28                                               
    29                                                       function void build_phase(uvm_phase phase);
    30              1                          1                 super.build_phase(phase);
    31              1                          1                 sb_export_wr = new("sb_export_wr", this);
    32              1                          1                 sb_fifo_wr = new("sb_fifo_wr", this);
    33              1                          1                 sb_export_rd = new("sb_export_rd", this);
    34              1                          1                 sb_fifo_rd = new("sb_fifo_rd", this);
    35                                                       endfunction
    36                                               
    37                                                       function void connect_phase (uvm_phase phase);
    38              1                          1                 super.connect_phase(phase);
    39              1                          1                 sb_export_wr.connect(sb_fifo_wr.analysis_export);
    40              1                          1                 sb_export_rd.connect(sb_fifo_rd.analysis_export);
    41                                                       endfunction
    42                                               
    43                                                       task run_phase(uvm_phase phase);
    44              1                          1                 super.run_phase(phase);
    45              1                          1                 forever begin
    46              1                      10001                     sb_fifo_wr.get(seq_item_sb_wr);
    47              1                      10000                     sb_fifo_rd.get(seq_item_sb_rd);
    48              1                      10000                     ref_model(seq_item_sb_wr, seq_item_sb_rd);
    49                                                               if(seq_item_sb_rd.data_out != data_out_ref) begin
    50              1                    ***0***                         `uvm_error("run_phase", $sformatf("Time: %0t: Comparison failed, Transaction received by the DUT: %s 
    51                                                                   While the reference out: 0x%0h", $time, seq_item_sb_rd.convert2string(), data_out_ref));
    52              1                    ***0***                         error_count++;
    53                                                               end
    54                                                               else begin
    55              1                    ***0***                         `uvm_info("run_phase", $sformatf("Correct ALSU out: %s", seq_item_sb_rd.convert2string()), UVM_HIGH);
    56              1                      10000                         correct_count++;
    57                                                               end  
    58                                                           end
    59                                                       endtask
    60                                               
    61                                                       task ref_model(FIFO_write_sequence_item seq_item_chk_wr, FIFO_read_sequence_item seq_item_chk_rd);
    62                                                           // Compute reference output
    63                                                           if (!seq_item_chk_rd.rst_n || !seq_item_chk_wr.rst_n) begin
    64              1                         97                     wr_ptr = 0;
    65              1                         97                     rd_ptr = 0;
    66              1                         97                     count = 0;
    67                                                           end else begin
    68                                                               // Write operation
    69                                                               if (seq_item_chk_wr.wr_en && !seq_item_chk_wr.overflow) begin
    70              1                       3530                         ref_mem[wr_ptr] = seq_item_chk_wr.data_in;
    71              1                       3530                         wr_ptr++;
    72                                                               end 
    73                                                               // Read operation
    74                                                               if (seq_item_chk_rd.rd_en && !seq_item_chk_rd.underflow) begin
    75              1                       2832                         data_out_ref = ref_mem[rd_ptr];
    76              1                       2832                         rd_ptr++;
    77                                                               end
    78                                                               // Counter update
    79                                                               if	(seq_item_chk_wr.wr_en && !seq_item_chk_rd.rd_en && !seq_item_chk_wr.full) 
    80              1                       1059                         count = count + 1;
    81                                                               else if (!seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && !seq_item_chk_rd.empty)
    82              1                        852                         count = count - 1;
    83                                                               else if (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_rd.empty)
    84              1                    ***0***                         count = count + 1;	
    85                                                               else if (seq_item_chk_wr.wr_en && seq_item_chk_rd.rd_en && seq_item_chk_wr.full)
    86              1                    ***0***                         count = count - 1;	
    87                                                           end
    88                                                       endtask
    89                                               
    90                                                       function void report_phase(uvm_phase phase);
    91              1                          1                 super.report_phase(phase);
    92              1                          1                 `uvm_info("run_phase", $sformatf("Total successful transactions: %0d", correct_count), UVM_MEDIUM)
    93              1                          1                 `uvm_info("run_phase", $sformatf("Total failed transactions: %0d", error_count), UVM_MEDIUM)


=================================================================================
=== Instance: /FIFO_read_monitor_pkg
=== Design Unit: work.FIFO_read_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_monitor.sv
------------------------------------IF Branch------------------------------------
    34                                     10000     Count coming in to IF
    34              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item_rd.convert2string(), UVM_HIGH);
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        15         3    83.33%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_monitor.sv
    1                                                package FIFO_read_monitor_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_read_sequence_item_pkg::*;
    6                                                
    7                                                    class FIFO_read_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(FIFO_read_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual FIFO_if read_monitor_vif;
    10                                                       FIFO_read_sequence_item rsp_seq_item_rd;
    11                                                       uvm_analysis_port #(FIFO_read_sequence_item) mon_ap_rd;
    12                                               
    13                                                       function new(string name = "FIFO_read_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_ap_rd = new("mon_ap_rd", this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      10001                     rsp_seq_item_rd = FIFO_read_sequence_item::type_id::create("rsp_seq_item_rd");
    26              1                      10001                     @(negedge read_monitor_vif.clk);
    27              1                      10000                     rsp_seq_item_rd.rst_n = read_monitor_vif.rst_n;
    28              1                      10000                     rsp_seq_item_rd.rd_en = read_monitor_vif.rd_en;
    29              1                      10000                     rsp_seq_item_rd.data_out = read_monitor_vif.data_out;
    30              1                      10000                     rsp_seq_item_rd.underflow = read_monitor_vif.underflow;
    31              1                      10000                     rsp_seq_item_rd.empty = read_monitor_vif.empty;
    32              1                      10000                     rsp_seq_item_rd.almostempty = read_monitor_vif.almostempty;
    33              1                      10000                     mon_ap_rd.write(rsp_seq_item_rd);
    34              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item_rd.convert2string(), UVM_HIGH);


=================================================================================
=== Instance: /FIFO_config_obj_pkg
=== Design Unit: work.FIFO_config_obj_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_config_obj_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config_obj.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***             `uvm_object_utils(FIFO_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***             `uvm_object_utils(FIFO_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***             `uvm_object_utils(FIFO_config_obj)
    6               4                    ***0***             `uvm_object_utils(FIFO_config_obj)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***             `uvm_object_utils(FIFO_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***             `uvm_object_utils(FIFO_config_obj)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_config_obj_pkg --

  File FIFO_config_obj.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /FIFO_config_obj_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config_obj.sv
    1                                                package FIFO_config_obj_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                
    5                                                    class FIFO_config_obj extends uvm_object;
    6               1                    ***0***             `uvm_object_utils(FIFO_config_obj)
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                    ***0***     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                        virtual FIFO_if fifo_config_vif;
    8                                                
    9                                                        function new(string name = "FIFO_config_obj");
    10              1                          1                 super.new(name);


=================================================================================
=== Instance: /FIFO_read_driver_pkg
=== Design Unit: work.FIFO_read_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_driver.sv
------------------------------------IF Branch------------------------------------
    26                                     10000     Count coming in to IF
    26              1                    ***0***                     `uvm_info("run_phase", stim_seq_item_rd.convert2string_stimulus(), UVM_HIGH)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        10         3    76.92%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_driver.sv
    1                                                package FIFO_read_driver_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_config_obj_pkg::*;
    6                                                    import FIFO_read_sequence_item_pkg::*;
    7                                                
    8                                                    class FIFO_read_driver extends uvm_driver #(FIFO_read_sequence_item);
    9               1                    ***0***             `uvm_component_utils(FIFO_read_driver)
    9               2                    ***0***     
    9               3                          2     
    10                                                       virtual FIFO_if read_driver_vif;
    11                                                       FIFO_read_sequence_item stim_seq_item_rd;
    12                                               
    13                                                       function new(string name = "FIFO_read_driver", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                                       
    17                                                       task run_phase(uvm_phase phase);
    18              1                          1                 super.run_phase(phase);
    19              1                          1                 forever begin
    20              1                      10001                     stim_seq_item_rd = FIFO_read_sequence_item::type_id::create("stim_seq_item_rd");
    21              1                      10001                     seq_item_port.get_next_item(stim_seq_item_rd);
    22              1                      10000                     read_driver_vif.rst_n = stim_seq_item_rd.rst_n; 
    23              1                      10000                     read_driver_vif.rd_en = stim_seq_item_rd.rd_en;  
    24              1                      10000                     @(negedge read_driver_vif.clk);
    25              1                      10000                     seq_item_port.item_done();
    26              1                    ***0***                     `uvm_info("run_phase", stim_seq_item_rd.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /FIFO_read_sequencer_pkg
=== Design Unit: work.FIFO_read_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_sequencer.sv
    1                                                package FIFO_read_sequencer_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_read_sequence_item_pkg::*;
    5                                                
    6                                                    class FIFO_read_sequencer extends uvm_sequencer #(FIFO_read_sequence_item);
    7               1                    ***0***             `uvm_component_utils(FIFO_read_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name = "FIFO_read_sequencer", uvm_component parent = null);
    10              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /FIFO_read_agent_pkg
=== Design Unit: work.FIFO_read_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***                 if (!uvm_config_db #(FIFO_config_obj)::get(this, "", "fifo_vif", config_obj_rd_agent)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_fatal("build_phase", "Read Agent - Unable to get the virtual interface of the FIFO from the uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_agent.sv
    1                                                package FIFO_read_agent_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_config_obj_pkg::*;
    5                                                    import FIFO_read_sequence_item_pkg::*;
    6                                                    import FIFO_read_sequencer_pkg::*;
    7                                                    import FIFO_read_driver_pkg::*;
    8                                                    import FIFO_read_monitor_pkg::*;
    9                                                
    10                                                   class FIFO_read_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(FIFO_read_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       FIFO_read_sequencer sqr_rd;
    13                                                       FIFO_read_driver drv_rd;
    14                                                       FIFO_read_monitor mon_rd;
    15                                                       FIFO_config_obj config_obj_rd_agent;
    16                                                       uvm_analysis_port #(FIFO_read_sequence_item) agt_ap_rd;
    17                                               
    18                                                       function new(string name = "FIFO_read_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                                           if (!uvm_config_db #(FIFO_config_obj)::get(this, "", "fifo_vif", config_obj_rd_agent)) begin
    25              1                    ***0***                     `uvm_fatal("build_phase", "Read Agent - Unable to get the virtual interface of the FIFO from the uvm_config_db");
    26                                                           end
    27              1                          1                 sqr_rd = FIFO_read_sequencer::type_id::create("sqr_rd", this);
    28              1                          1                 drv_rd = FIFO_read_driver::type_id::create("drv_rd", this);
    29              1                          1                 mon_rd = FIFO_read_monitor::type_id::create("mon_rd", this);
    30              1                          1                 agt_ap_rd = new("agt_ap_rd", this);
    31                                                       endfunction
    32                                               
    33                                                       function void connect_phase (uvm_phase phase);
    34              1                          1                 super.connect_phase(phase);
    35              1                          1                 drv_rd.read_driver_vif = config_obj_rd_agent.fifo_config_vif;
    36              1                          1                 mon_rd.read_monitor_vif = config_obj_rd_agent.fifo_config_vif;
    37              1                          1                 drv_rd.seq_item_port.connect(sqr_rd.seq_item_export);
    38              1                          1                 mon_rd.mon_ap_rd.connect(agt_ap_rd);


=================================================================================
=== Instance: /FIFO_write_monitor_pkg
=== Design Unit: work.FIFO_write_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_monitor.sv
------------------------------------IF Branch------------------------------------
    35                                     10000     Count coming in to IF
    35              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item_wr.convert2string(), UVM_HIGH);
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        16         3    84.21%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_monitor.sv
    1                                                package FIFO_write_monitor_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_write_sequence_item_pkg::*;
    6                                                
    7                                                    class FIFO_write_monitor extends uvm_monitor;
    8               1                    ***0***             `uvm_component_utils(FIFO_write_monitor)
    8               2                    ***0***     
    8               3                          2     
    9                                                        virtual FIFO_if write_monitor_vif;
    10                                                       FIFO_write_sequence_item rsp_seq_item_wr;
    11                                                       uvm_analysis_port #(FIFO_write_sequence_item) mon_ap_wr;
    12                                               
    13                                                       function new(string name = "FIFO_write_monitor", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                               
    17                                                       function void build_phase(uvm_phase phase);
    18              1                          1                 super.build_phase(phase);
    19              1                          1                 mon_ap_wr = new("mon_ap_wr", this);
    20                                                       endfunction
    21                                               
    22                                                       task run_phase(uvm_phase phase);
    23              1                          1                 super.run_phase(phase);
    24              1                          1                 forever begin
    25              1                      10001                     rsp_seq_item_wr = FIFO_write_sequence_item::type_id::create("rsp_seq_item_wr");
    26              1                      10001                     @(negedge write_monitor_vif.clk);
    27              1                      10000                     rsp_seq_item_wr.rst_n = write_monitor_vif.rst_n;
    28              1                      10000                     rsp_seq_item_wr.wr_en = write_monitor_vif.wr_en;
    29              1                      10000                     rsp_seq_item_wr.data_in = write_monitor_vif.data_in;
    30              1                      10000                     rsp_seq_item_wr.wr_ack = write_monitor_vif.wr_ack;
    31              1                      10000                     rsp_seq_item_wr.overflow = write_monitor_vif.overflow;
    32              1                      10000                     rsp_seq_item_wr.full = write_monitor_vif.full;
    33              1                      10000                     rsp_seq_item_wr.almostfull = write_monitor_vif.almostfull;
    34              1                      10000                     mon_ap_wr.write(rsp_seq_item_wr);
    35              1                    ***0***                     `uvm_info("run_phase", rsp_seq_item_wr.convert2string(), UVM_HIGH);


=================================================================================
=== Instance: /FIFO_write_driver_pkg
=== Design Unit: work.FIFO_write_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_driver.sv
------------------------------------IF Branch------------------------------------
    27                                     10000     Count coming in to IF
    27              1                    ***0***                     `uvm_info("run_phase", stim_seq_item_wr.convert2string_stimulus(), UVM_HIGH)
                                           10000     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_driver.sv
    1                                                package FIFO_write_driver_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import shared_pkg::*;
    5                                                    import FIFO_config_obj_pkg::*;
    6                                                    import FIFO_write_sequence_item_pkg::*;
    7                                                
    8                                                    class FIFO_write_driver extends uvm_driver #(FIFO_write_sequence_item);
    9               1                    ***0***             `uvm_component_utils(FIFO_write_driver)
    9               2                    ***0***     
    9               3                          2     
    10                                                       virtual FIFO_if write_driver_vif;
    11                                                       FIFO_write_sequence_item stim_seq_item_wr;
    12                                               
    13                                                       function new(string name = "FIFO_write_driver", uvm_component parent = null);
    14              1                          1                 super.new(name, parent);
    15                                                       endfunction
    16                                                       
    17                                                       task run_phase(uvm_phase phase);
    18              1                          1                 super.run_phase(phase);
    19              1                          1                 forever begin
    20              1                      10001                     stim_seq_item_wr = FIFO_write_sequence_item::type_id::create("stim_seq_item_wr");
    21              1                      10001                     seq_item_port.get_next_item(stim_seq_item_wr);
    22              1                      10000                     write_driver_vif.rst_n = stim_seq_item_wr.rst_n; 
    23              1                      10000                     write_driver_vif.wr_en = stim_seq_item_wr.wr_en; 
    24              1                      10000                     write_driver_vif.data_in = stim_seq_item_wr.data_in; 
    25              1                      10000                     @(negedge write_driver_vif.clk);
    26              1                      10000                     seq_item_port.item_done();
    27              1                    ***0***                     `uvm_info("run_phase", stim_seq_item_wr.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /FIFO_write_sequencer_pkg
=== Design Unit: work.FIFO_write_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_sequencer.sv
    1                                                package FIFO_write_sequencer_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_write_sequence_item_pkg::*;
    5                                                
    6                                                    class FIFO_write_sequencer extends uvm_sequencer #(FIFO_write_sequence_item);
    7               1                    ***0***             `uvm_component_utils(FIFO_write_sequencer)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                        function new(string name = "FIFO_write_sequencer", uvm_component parent = null);
    10              1                          1                 super.new(name, parent);


=================================================================================
=== Instance: /FIFO_write_agent_pkg
=== Design Unit: work.FIFO_write_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***                 if (!uvm_config_db #(FIFO_config_obj)::get(this, "", "fifo_vif", config_obj_wr_agent)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***                     `uvm_fatal("build_phase", "Write Agent - Unable to get the virtual interface of the FIFO from the uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_agent.sv
    1                                                package FIFO_write_agent_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_config_obj_pkg::*;
    5                                                    import FIFO_write_sequence_item_pkg::*;
    6                                                    import FIFO_write_sequencer_pkg::*;
    7                                                    import FIFO_write_driver_pkg::*;
    8                                                    import FIFO_write_monitor_pkg::*;
    9                                                
    10                                                   class FIFO_write_agent extends uvm_agent;
    11              1                    ***0***             `uvm_component_utils(FIFO_write_agent)
    11              2                    ***0***     
    11              3                          2     
    12                                                       FIFO_write_sequencer sqr_wr;
    13                                                       FIFO_write_driver drv_wr;
    14                                                       FIFO_write_monitor mon_wr;
    15                                                       FIFO_config_obj config_obj_wr_agent;
    16                                                       uvm_analysis_port #(FIFO_write_sequence_item) agt_ap_wr;
    17                                               
    18                                                       function new(string name = "FIFO_write_agent", uvm_component parent = null);
    19              1                          1                 super.new(name, parent);
    20                                                       endfunction
    21                                               
    22                                                       function void build_phase(uvm_phase phase);
    23              1                          1                 super.build_phase(phase);
    24                                                           if (!uvm_config_db #(FIFO_config_obj)::get(this, "", "fifo_vif", config_obj_wr_agent)) begin
    25              1                    ***0***                     `uvm_fatal("build_phase", "Write Agent - Unable to get the virtual interface of the FIFO from the uvm_config_db");
    26                                                           end
    27              1                          1                 sqr_wr = FIFO_write_sequencer::type_id::create("sqr_wr", this);
    28              1                          1                 drv_wr = FIFO_write_driver::type_id::create("drv_wr", this);
    29              1                          1                 mon_wr = FIFO_write_monitor::type_id::create("mon_wr", this);
    30              1                          1                 agt_ap_wr = new("agt_ap_wr", this);
    31                                                       endfunction
    32                                               
    33                                                       function void connect_phase (uvm_phase phase);
    34              1                          1                 super.connect_phase(phase);
    35              1                          1                 drv_wr.write_driver_vif = config_obj_wr_agent.fifo_config_vif;
    36              1                          1                 mon_wr.write_monitor_vif = config_obj_wr_agent.fifo_config_vif;
    37              1                          1                 drv_wr.seq_item_port.connect(sqr_wr.seq_item_export);
    38              1                          1                 mon_wr.mon_ap_wr.connect(agt_ap_wr);


=================================================================================
=== Instance: /FIFO_env_pkg
=== Design Unit: work.FIFO_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      13        11         2    84.61%

================================Statement Details================================

Statement Coverage for instance /FIFO_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_env.sv
    1                                                package FIFO_env_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_write_agent_pkg::*;
    5                                                    import FIFO_read_agent_pkg::*;
    6                                                    import FIFO_scoreboard_pkg::*;
    7                                                    import FIFO_coverage_pkg::*;
    8                                                
    9                                                    class FIFO_env extends uvm_env;
    10              1                    ***0***             `uvm_component_utils(FIFO_env)
    10              2                    ***0***     
    10              3                          2     
    11                                                       FIFO_write_agent agt_wr;
    12                                                       FIFO_read_agent agt_rd;
    13                                                       FIFO_scoreboard sb;
    14                                                       FIFO_coverage cov;
    15                                               
    16                                                       function new(string name = "FIFO_env", uvm_component parent = null);
    17              1                          1                 super.new(name, parent);
    18                                                       endfunction
    19                                               
    20                                                       function void build_phase(uvm_phase phase);
    21              1                          1                 super.build_phase(phase);
    22              1                          1                 agt_wr = FIFO_write_agent::type_id::create("agt_wr",this);
    23              1                          1                 agt_rd = FIFO_read_agent::type_id::create("agt_rd",this);
    24              1                          1                 sb = FIFO_scoreboard::type_id::create("sb",this);
    25              1                          1                 cov = FIFO_coverage::type_id::create("cov",this);
    26                                                       endfunction 
    27                                               
    28                                                       function void connect_phase(uvm_phase phase);
    29              1                          1                 agt_wr.agt_ap_wr.connect(sb.sb_export_wr);
    30              1                          1                 agt_wr.agt_ap_wr.connect(cov.cov_export_wr);
    31              1                          1                 agt_rd.agt_ap_rd.connect(sb.sb_export_rd);
    32              1                          1                 agt_rd.agt_ap_rd.connect(cov.cov_export_rd);


=================================================================================
=== Instance: /FIFO_test_pkg
=== Design Unit: work.FIFO_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        12         5         7    41.66%

================================Branch Details================================

Branch Coverage for instance /FIFO_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***                 if (!uvm_config_db #(virtual FIFO_if)::get(this, "", "FIFO_IF", FIFO_config_obj_test.fifo_config_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***                     `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the FIFO from the uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    38                                         1     Count coming in to IF
    38              1                          1                         `uvm_info("run_phase", "Write stimulus started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    40                                         1     Count coming in to IF
    40              1                          1                         `uvm_info("run_phase", "Write stimulus finished", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    44                                         1     Count coming in to IF
    44              1                          1                         `uvm_info("run_phase", "Read stimulus started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1                         `uvm_info("run_phase", "Read stimulus finished", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        17         3    85.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
    1                                                package FIFO_test_pkg;
    2                                                    `include "uvm_macros.svh"
    3                                                    import uvm_pkg::*;
    4                                                    import FIFO_config_obj_pkg::*;
    5                                                    import FIFO_env_pkg::*;
    6                                                    import FIFO_sequence_pkg::*;
    7                                                
    8                                                    class FIFO_test extends uvm_test;
    9               1                    ***0***             `uvm_component_utils(FIFO_test)
    9               2                    ***0***     
    9               3                          4     
    10                                                       FIFO_config_obj FIFO_config_obj_test;
    11                                                       FIFO_env env;
    12                                                       write_sequence wr_seq;
    13                                                       read_sequence rd_seq;
    14                                               
    15                                                       function new(string name = "FIFO_test", uvm_component parent = null);
    16              1                          1                 super.new(name, parent);
    17                                                       endfunction
    18                                               
    19                                                       function void build_phase(uvm_phase phase);
    20              1                          1                 super.build_phase(phase);
    21              1                          1                 env = FIFO_env::type_id::create("env", this);
    22              1                          1                 FIFO_config_obj_test = FIFO_config_obj::type_id::create("FIFO_config_obj_test");
    23              1                          1                 wr_seq = write_sequence::type_id::create("wr_seq", this);
    24              1                          1                 rd_seq = read_sequence::type_id::create("rd_seq", this);
    25                                                           // Retrieve the virtual interface from the configuration database
    26                                                           if (!uvm_config_db #(virtual FIFO_if)::get(this, "", "FIFO_IF", FIFO_config_obj_test.fifo_config_vif))
    27              1                    ***0***                     `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of the FIFO from the uvm_config_db");
    28                                                           // Set the virtual interface for other components    
    29              1                          1                 uvm_config_db#(FIFO_config_obj)::set(this, "*", "fifo_vif", FIFO_config_obj_test);    
    30                                                       endfunction
    31                                               
    32                                                       task run_phase(uvm_phase phase);
    33              1                          1                 super.run_phase(phase);
    34              1                          1                 phase.raise_objection(this);
    35                                                           fork
    36                                                               // Write sequence
    37                                                               begin
    38              1                          1                         `uvm_info("run_phase", "Write stimulus started", UVM_LOW)
    39              1                          1                         wr_seq.start(env.agt_wr.sqr_wr);
    40              1                          1                         `uvm_info("run_phase", "Write stimulus finished", UVM_LOW)
    41                                                               end
    42                                                               // Read sequence
    43                                                               begin
    44              1                          1                         `uvm_info("run_phase", "Read stimulus started", UVM_LOW)
    45              1                          1                         rd_seq.start(env.agt_rd.sqr_rd);
    46              1                          1                         `uvm_info("run_phase", "Read stimulus finished", UVM_LOW)
    47                                                               end
    48                                                           join
    49              1                          1                 phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/fifo_cvg       100.00%        100          -    Covered              
    covered/total bins:                                    66         66          -                      
    missing/total bins:                                     0         66          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_en_0                                      3036          1          -    Covered              
        bin wr_en_1                                      6964          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin rd_en_0                                      7100          1          -    Covered              
        bin rd_en_1                                      2900          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_ack_0                                     6470          1          -    Covered              
        bin wr_ack_1                                     3530          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_0                                   6631          1          -    Covered              
        bin overflow_1                                   3369          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_0                                  9960          1          -    Covered              
        bin underflow_1                                    40          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_0                                       5107          1          -    Covered              
        bin full_1                                       4893          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_0                                      9851          1          -    Covered              
        bin empty_1                                       149          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_0                                 7014          1          -    Covered              
        bin almostfull_1                                 2986          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_0                                9774          1          -    Covered              
        bin almostempty_1                                 226          1          -    Covered              
    Cross WR_ACK_CX                                   100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,wr_ack_1>               1021          1          -    Covered              
            bin <wr_en_1,rd_en_0,wr_ack_1>               2509          1          -    Covered              
            bin <wr_en_1,rd_en_1,wr_ack_0>                991          1          -    Covered              
            bin <wr_en_1,rd_en_0,wr_ack_0>               2443          1          -    Covered              
            bin <wr_en_0,rd_en_1,wr_ack_0>                888          1          -    Covered              
            bin <wr_en_0,rd_en_0,wr_ack_0>               2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_0_wr_ack_1_rd_en_1             0                     -    ZERO                 
            ignore_bin wr_en_0_wr_ack_1_rd_en_0             0                     -    ZERO                 
    Cross OVERFLOW_CX                                 100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,overflow_1>              974          1          -    Covered              
            bin <wr_en_1,rd_en_0,overflow_1>             2395          1          -    Covered              
            bin <wr_en_1,rd_en_1,overflow_0>             1038          1          -    Covered              
            bin <wr_en_1,rd_en_0,overflow_0>             2557          1          -    Covered              
            bin <wr_en_0,rd_en_1,overflow_0>              888          1          -    Covered              
            bin <wr_en_0,rd_en_0,overflow_0>             2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_0_overflow_1_rd_en_1           0                     -    ZERO                 
            ignore_bin wr_en_0_overflow_1_rd_en_0           0                     -    ZERO                 
    Cross UNDERFLOW_CX                                100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,underflow_1>              28          1          -    Covered              
            bin <wr_en_0,rd_en_1,underflow_1>              12          1          -    Covered              
            bin <wr_en_1,rd_en_1,underflow_0>            1984          1          -    Covered              
            bin <wr_en_1,rd_en_0,underflow_0>            4952          1          -    Covered              
            bin <wr_en_0,rd_en_1,underflow_0>             876          1          -    Covered              
            bin <wr_en_0,rd_en_0,underflow_0>            2148          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_1_underflow_1_rd_en_0          0                     -    ZERO                 
            ignore_bin wr_en_0_underflow_1_rd_en_0          0                     -    ZERO                 
    Cross FULL_CX                                     100.00%        100          -    Covered              
        covered/total bins:                                 6          6          -                      
        missing/total bins:                                 0          6          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_0,full_1>                 3845          1          -    Covered              
            bin <wr_en_0,rd_en_0,full_1>                 1048          1          -    Covered              
            bin <wr_en_1,rd_en_1,full_0>                 2012          1          -    Covered              
            bin <wr_en_1,rd_en_0,full_0>                 1107          1          -    Covered              
            bin <wr_en_0,rd_en_1,full_0>                  888          1          -    Covered              
            bin <wr_en_0,rd_en_0,full_0>                 1100          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en_1_full_1_rd_en_1               0                     -    ZERO                 
            ignore_bin wr_en_0_full_1_rd_en_1               0                     -    ZERO                 
    Cross EMPTY_CX                                    100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,empty_1>                  17          1          -    Covered              
            bin <wr_en_0,rd_en_1,empty_1>                  36          1          -    Covered              
            bin <wr_en_1,rd_en_0,empty_1>                  48          1          -    Covered              
            bin <wr_en_0,rd_en_0,empty_1>                  48          1          -    Covered              
            bin <wr_en_1,rd_en_1,empty_0>                1995          1          -    Covered              
            bin <wr_en_0,rd_en_1,empty_0>                 852          1          -    Covered              
            bin <wr_en_1,rd_en_0,empty_0>                4904          1          -    Covered              
            bin <wr_en_0,rd_en_0,empty_0>                2100          1          -    Covered              
    Cross ALMOSTFULL_CX                               100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,almostfull_1>           1553          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostfull_1>            419          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostfull_1>            363          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostfull_1>            651          1          -    Covered              
            bin <wr_en_1,rd_en_1,almostfull_0>            459          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostfull_0>            469          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostfull_0>           4589          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostfull_0>           1497          1          -    Covered              
    Cross ALMOSTEMPTY_CX                              100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <wr_en_1,rd_en_1,almostempty_1>            73          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostempty_1>            21          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostempty_1>            80          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostempty_1>            52          1          -    Covered              
            bin <wr_en_1,rd_en_1,almostempty_0>          1939          1          -    Covered              
            bin <wr_en_0,rd_en_1,almostempty_0>           867          1          -    Covered              
            bin <wr_en_1,rd_en_0,almostempty_0>          4872          1          -    Covered              
            bin <wr_en_0,rd_en_0,almostempty_0>          2096          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/dut/fifo_sva_inst/cover__no_full_on_rd_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(79) 2851 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__no_rd_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(72) 6956 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__no_wr_en 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(65) 2970 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__wr_ack_not_on_full 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(58) 4786 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_underflow 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(50)   40 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_overflow 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(44) 3338 Covered   
/FIFO_top/dut/fifo_sva_inst/cover__a_wr_ack 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(38) 3499 Covered   
/FIFO_top/dut/fifo_sva_inst/c_reset      FIFO_SVA Verilog  SVA  FIFO_SVA.sv(10)   96 Covered   
/FIFO_top/dut/fifo_sva_inst/c_full       FIFO_SVA Verilog  SVA  FIFO_SVA.sv(15) 3533 Covered   
/FIFO_top/dut/fifo_sva_inst/c_empty      FIFO_SVA Verilog  SVA  FIFO_SVA.sv(20)  217 Covered   
/FIFO_top/dut/fifo_sva_inst/c_almostfull FIFO_SVA Verilog  SVA  FIFO_SVA.sv(25) 2793 Covered   
/FIFO_top/dut/fifo_sva_inst/c_almostempty 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(30)  213 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 12

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/dut/fifo_sva_inst/assert__no_full_on_rd_en
                     FIFO_SVA.sv(78)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__no_rd_en
                     FIFO_SVA.sv(71)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__no_wr_en
                     FIFO_SVA.sv(64)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__wr_ack_not_on_full
                     FIFO_SVA.sv(57)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_underflow
                     FIFO_SVA.sv(49)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_overflow
                     FIFO_SVA.sv(43)                    0          1
/FIFO_top/dut/fifo_sva_inst/assert__a_wr_ack
                     FIFO_SVA.sv(37)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_reset
                     FIFO_SVA.sv(8)                     0          1
/FIFO_top/dut/fifo_sva_inst/a_full
                     FIFO_SVA.sv(13)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_empty
                     FIFO_SVA.sv(18)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_almostfull
                     FIFO_SVA.sv(23)                    0          1
/FIFO_top/dut/fifo_sva_inst/a_almostempty
                     FIFO_SVA.sv(28)                    0          1
/FIFO_sequence_pkg/write_sequence/body/#ublk#38615015#23/immed__26
                     FIFO_sequence.sv(26)               0          1
/FIFO_sequence_pkg/read_sequence/body/#ublk#38615015#46/immed__49
                     FIFO_sequence.sv(49)               0          1

Total Coverage By Instance (filtered view): 84.26%

